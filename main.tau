mod mod_foo {

  pub enum enum_bar {
    FIZZ BUZZ
  }

  union union_fizz {
    var x: i32
    var y: i32
  }

  struct struct_buzz {
    pub union union_buzz {
      var x: i32
      var y: i32
    }
  }

  pub gen gen_foo(n: u64): u64
    for i in 0..n do
      yield i

  pub fun fun_bar(n: u64): u64 {
    var sum: mut u64 = 0
    
    for i: mut u64 in 0..n do {
      if i % 2 == 0 then
        continue
      elif i % 3 == 0 then
        i *= 2
      else
        ++i
    
      sum += i
    }
    
    return sum
  }

}

fun main(argc: i32, argv: []*u8): i32 {
  var t: mut const static *[]&?fun(i32, i32): gen(i32, i32): i32

  var f =
    fun(a: i32)
      a + 1

  var g =
    gen(a: i32)
      for i in 0..a do
        yield i

  var i = 0

  while i < 10 do
    ++i

  return i
}
